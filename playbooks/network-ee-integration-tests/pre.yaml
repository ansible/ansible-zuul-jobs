---
- hosts: controller
  vars:
    _hosts_dict: {}
  tasks:
    - set_fact:
        _network_appliance_groups: "{{ groups.keys()|select('match', '^(appliance|openvswitch)')|list }}"

    - name: Select proper appliance
      set_fact:
        _appliance_vars: "{{ hostvars[groups[_network_appliance_groups|first][0]] }}"
      when: _network_appliance_groups|length > 0

    - name: Select proper ansible_network_os
      set_fact:
        _network_os: "{{ _appliance_vars['ansible_network_os'] }}"

    - name: Setup tox role
      include_role:
        name: tox
      vars:
        tox_envlist: venv
        tox_extra_args: "-vv -- ansible-playbook -v playbooks/ansible-test-network-integration-base/files/bootstrap-{{ _network_os }}.yaml"
        tox_install_siblings: false
        zuul_work_dir: "{{ zuul.projects['github.com/ansible/ansible-zuul-jobs'].src_dir }}"

    - name: Ensure remote NETCONF SSH host keys are known
      shell: "ssh-keyscan -v -t rsa -p 830 {{ hostvars[item].ansible_host }} >> ~/.ssh/known_hosts"
      when: hostvars[item].ansible_network_os in ['junos']
      with_inventory_hostnames: appliance

    # Update ansible-navigator inventory file with nodepool information.
    - name: Read appliance inventory file
      slurp:
        path: "{{ zuul.projects['github.com/ansible/network-ee'].src_dir }}/tests/integration/inventories/{{ _network_os }}.yaml"
      register: _inventory

    - name: Load inventory data into fact
      set_fact:
        _inventory_data: "{{ _inventory['content'] | b64decode | from_yaml }}"

    - name: Setup nodepool hostvars
      set_fact:
        _hosts_dict: "{{ _hosts_dict | combine({ _network_os: { 'ansible_host': _appliance_vars.ansible_host } }) }}"

    - name: Patch inventory data for testing
      set_fact:
        _inventory_data: "{{ _inventory_data | combine(newdata, recursive=True) }}"
      vars:
        newdata:
          appliance:
            hosts: "{{ _hosts_dict }}"
            vars:
              ansible_ssh_private_key_file: "{{ ansible_ssh_private_key_file }}"

    - name: Write appliance inventory file
      copy:
        content: "{{ _inventory_data | to_nice_yaml(indent=2, explicit_start=True) }}"
        dest: "{{ zuul.projects['github.com/ansible/network-ee'].src_dir }}/tests/integration/inventories/{{ _network_os }}.yaml"

    - name: Setup appliance inventory symlink
      file:
        dest: "~/{{ zuul.projects['github.com/ansible/network-ee'].src_dir }}/tests/integration/inventories/hosts.yaml"
        src: "~/{{ zuul.projects['github.com/ansible/network-ee'].src_dir }}/tests/integration/inventories/{{ _network_os }}.yaml"
        state: link

    # Update ansible-navigator.cfg with per job settings
    - name: Read ansible-navigator.cfg file
      slurp:
        path: "{{ zuul.projects['github.com/ansible/network-ee'].src_dir }}/tests/integration/ansible-navigator.yaml"
      register: _navigator

    - name: Load navigator data into fact
      set_fact:
        _navigator_data: "{{ _navigator['content'] | b64decode | from_yaml }}"

    - name: Patch navigator data for testing
      set_fact:
        _navigator_data: "{{ _navigator_data | combine(newdata, recursive=True) }}"
      vars:
        newdata:
          ansible-navigator:
            execution-environment:
              image: "{{ container_image_name}}:{{ container_image_version }}"
            mode: stdout

    - name: Write ansible-navigator.cfg file
      copy:
        content: "{{ _navigator_data | to_nice_yaml(indent=2, explicit_start=True) }}"
        dest: "{{ zuul.projects['github.com/ansible/network-ee'].src_dir }}/tests/integration/ansible-navigator.yaml"

    # Update ansible.cfg with per job settings
    - name: Set persistent_connection ssh_type value
      ini_file:
        path: "{{ zuul.projects['github.com/ansible/network-ee'].src_dir }}/tests/integration/ansible.cfg"
        section: persistent_connection
        option: ssh_type
        value: "{{ ansible_network_cli_ssh_type }}"
