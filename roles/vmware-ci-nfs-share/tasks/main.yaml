---
- name: Create the share directory
  file:
    path: /srv/share
    state: directory
  become: true

- name: Prepare the NFS shares
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ ansible_user }}'
  with_items:
    - /srv/share/vms
    - /srv/share/isos
  become: true

- name: Prepare the content-library share
  file:
    path: /srv/share/content-library
    state: directory
    owner: '{{ vmware_ci_nfs_share_content_library_uid }}'
    group: '{{ vmware_ci_nfs_share_owner_gid }}'
  become: true

- name: Download ISO
  get_url:
    url: '{{ item.value.url }}'
    dest: '/srv/share/isos/{{ item.key }}'
    checksum: '{{ item.value.checksum }}'
    mode: '0644'
  with_dict: "{{ vmware_ci_nfs_share_iso_files }}"

- name: Adjust the ownership of the isos dir
  file:
    path: /srv/share/isos
    state: directory
    recurse: true
    owner: '{{ vmware_ci_nfs_share_owner_uid }}'
    group: '{{ vmware_ci_nfs_share_owner_gid }}'
    mode: '0555'
  become: true

- name: Adjust the ownership of the vms dir
  file:
    path: /srv/share/isos
    state: directory
    recurse: true
    owner: '{{ vmware_ci_nfs_share_owner_uid }}'
    group: '{{ vmware_ci_nfs_share_owner_gid }}'
    mode: '0755'
  become: true

- name: Install nfs-utils
  package:
    name: nfs-utils
    state: present
  become: true
  notify:
    - Restart nfs-server

- name: Prepare the /etc/exports file
  template:
    src: exports.j2
    dest: /etc/exports
  become: true
  notify:
    - Restart nfs-server

- name: Install squid
  package:
    name: squid
    state: present
  become: true

- name: Start squid
  systemd:
    state: started
    name: squid
  become: true
