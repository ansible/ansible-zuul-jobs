---
- hosts: controller
  vars:
    ansible_galaxy_collection_path: "~/artifacts"
    ansible_galaxy_executable: ansible-galaxy
    ansible_galaxy_type: automation_hub
  tasks:
    - name: Run bindep role
      include_role:
        name: bindep

    - name: Ensure ansible-core is installed on the controller
      package:
        name: ansible-core
        state: present
      become: true

    - name: Run revoke-sudo role
      include_role:
        name: revoke-sudo

    - name: Setup tox role
      include_role:
        name: tox
      vars:
        tox_envlist: generate_collection_version
        tox_extra_args: -vv --notest
        tox_install_siblings: false
        zuul_work_dir: "{{ zuul.projects['github.com/ansible-network/releases'].src_dir }}"

    - name: Generate version number for ansible collection.
      args:
        chdir: "{{ zuul.project.src_dir }}"
      command: "~/{{ zuul.projects['github.com/ansible-network/releases'].src_dir }}/.tox/generate_collection_version/bin/generate-ansible-collection"

    - name: Run build-ansible-collection role
      include_role:
        name: build-ansible-collection
      vars:
        ansible_galaxy_executable: "~/{{ zuul.projects['github.com/ansible-network/releases'].src_dir }}/.tox/generate_collection_version/bin/ansible-galaxy"
        ansible_galaxy_output_path: "~/artifacts"

    - name: Run ensure-virtualenv role
      include_role:
        name: ensure-virtualenv

    - name: Create temporary directory for python virtual env
      ansible.builtin.tempfile:
        state: directory
        suffix: .ansible_venv
      register: venv_path

    - block:
        - name: Create virtualenv and install ansible devel into it
          ansible.builtin.pip:
            virtualenv_python: python3.11
            virtualenv: "{{ venv_path.path }}"
            state: present
            name:
              - 'git+https://github.com/ansible/ansible@devel'

        - name: Publish collections tarballs
          environment:
            ANSIBLE_CONFIG: "{{ ansible_config_file_path }}"
          shell: "source {{ venv_path.path }}/bin/activate && ansible-galaxy --version"
          with_items: "{{ collection_tarballs_files }}"

      always:
        - name: Delete temporary directory used for python virtual env
          ansible.builtin.file:
            state: absent
            path: "{{ venv_path.path }}"
