---
- hosts: controller
  tasks:
    - name: Install binary dependencies
      include_role:
        name: bindep
      vars:
        bindep_dir: "{{ zuul.project.src_dir }}"

    - set_fact:
        _network_appliance_groups: "{{ groups.keys()|select('match', '^(appliance|openvswitch)')|list }}"

    - name: Select proper ansible_network_os
      set_fact:
        _network_os: "{{ hostvars[groups[_network_appliance_groups|first][0]]['ansible_network_os'] }}"
      when: _network_appliance_groups|length > 0

    - name: Setup tox role
      include_role:
        name: tox
      vars:
        tox_envlist: venv
        tox_extra_args: "-vv -- ansible-playbook -v playbooks/ansible-test-network-integration-base/files/bootstrap-{{ _network_os }}.yaml"
        tox_install_siblings: false
        zuul_work_dir: "{{ zuul.projects['github.com/ansible/ansible-zuul-jobs'].src_dir }}"

    - name: Ensure remote NETCONF SSH host keys are known
      shell: "ssh-keyscan -v -t rsa -p 830 {{ hostvars[item].ansible_host }} >> ~/.ssh/known_hosts"
      when: hostvars[item].ansible_network_os in ['junos']
      with_inventory_hostnames: appliance

    - name: Create inventory file
      import_role:
        name: ansible-test-inventory
      vars:
        ansible_test_inventory_os: "{{ _network_os }}"
        ansible_test_inventory_dest: ~/inventory
        vmware_ci_set_passwords_secret_dir: '{{ zuul.executor.work_root }}'

    - name: Fetch and install the artifacts
      import_role:
        name: deploy-artifacts
      when:
        - ansible_test_collections | default(False)
