---
- hosts: controller
  tasks:
    - name: Setup location of project
      set_fact:
        _test_location: "{{ ansible_user_dir }}/{{ zuul.projects['github.com/ansible/ansible'].src_dir }}"

    - name: Setup base test_options
      set_fact:
        _test_options: "--continue-on-error --diff --requirements"

    - name: Enable --no-temp-workdir for test_options
      set_fact:
        _test_options: "{{ _test_options }} --no-temp-workdir"
      when: zuul.projects['github.com/ansible/ansible'].checkout not in ["stable-2.6", "stable-2.7"]

    - name: Setup --skip-tags for test_options
      set_fact:
        _test_options: "{{ _test_options }} --skip-tags {{ ansible_test_skip_tags }}"
      when: ansible_test_skip_tags | default(False)

    - name: Enable --inventory for network-integration
      set_fact:
        _test_options: "{{ _test_options }} --inventory /home/zuul/inventory"
      when: ansible_test_command == 'network-integration'

    - name: Setup testing for collections
      block:
        - name: Setup download-artifact-fork role
          include_role:
            name: download-artifact-fork
          vars:
            download_artifact_directory: ~/downloads
            download_artifact_type:
              - ansible_collection

        - name: Install jq
          become: true
          package:
            name: jq
            state: present

        - name: Install ara into virtuelenv
          shell: ~/venv/bin/pip install yq

        - name: Install require-project collection using ansible-galaxy
          args:
            chdir: "{{ ansible_user_dir }}/downloads"
            executable: /bin/bash
          shell: "source ~/venv/bin/activate; {{ ansible_user_dir }}/{{ zuul.projects['github.com/ansible/ansible'].src_dir }}/bin/ansible-galaxy collection install -p ~/.ansible/collection {{ item.url | basename }}"
          with_items: "{{ zuul.artifacts }}"
          when: "'metadata' in item and 'type' in item.metadata and (item.metadata.type == 'ansible_collection')"

        - name: Get collection namespace
          args:
            chdir: "{{ ansible_user_dir }}/{{ zuul.project.src_dir }}"
            executable: /bin/bash
          shell: cat galaxy.yml | ~/venv/bin/yq -y .namespace | tail -n +1 | head -1
          register: _collection_namespace

        - name: Get collection name
          args:
            chdir: "{{ ansible_user_dir }}/{{ zuul.project.src_dir }}"
            executable: /bin/bash
          shell: cat galaxy.yml | ~/venv/bin/yq -y .name | tail -n +1 | head -1
          register: _collection_name

        - name: Setup location of project
          set_fact:
            _test_location: "~/.ansible/collection/ansible_collections/{{ _collection_namespace.stdout }}/{{ _collection_name.stdout }}"

        - name: Copy ansible.cfg to correct location
          shell: "cp {{ ansible_user_dir }}/{{ zuul.projects['github.com/ansible/ansible'].src_dir }}/test/integration/{{ ansible_test_command }}.cfg {{ _test_location }}/tests/integration/{{ ansible_test_command }}.cfg"

      when: ansible_test_collections | default(False)

    - name: Run the integration test suite
      args:
        chdir: "{{ _test_location }}"
        executable: /bin/bash
      environment: "{{ ansible_test_environment | default({}) }}"
      shell: "source ~/venv/bin/activate; ansible-test {{ ansible_test_command }} {{ _test_options }} --python {{ ansible_test_python }} -vvvv {{ ansible_test_integration_targets }}"
