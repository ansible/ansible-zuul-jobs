#!/usr/bin/env python3

from pathlib import Path
import argparse

from ruamel.yaml import YAML
from ruamel.yaml.comments import Comment

yaml = YAML()
yaml.indent(sequence=4, offset=2)
yaml.explicit_start = True

parser = argparse.ArgumentParser()
parser.add_argument("repo_dir", type=Path, help="Location of the amazon.aws collection")

args = parser.parse_args()
to_skip = {"disabled", "unsupported"}


def list_targets(repo_dir):
    targets_dir = repo_dir / "tests" / "integration" / "targets"
    for alias in targets_dir.glob("*/aliases"):
        skip_reason = set(alias.read_text().split("\n")) & to_skip
        if skip_reason:
            print(f"Skipping {alias.parent.stem} because {skip_reason}")
            continue
        yield alias.parent.stem


def build_job_entry(target):
    return {
        "job": {
            "name": f"integration-amazon.aws-target-{target}",
            "nodeset": "container-ansible",
            "parent": "ansible-test-cloud-integration-aws",
            "vars": {"ansible_test_integration_targets": target},
        }
    }


jobs = [build_job_entry(target) for target in list_targets(args.repo_dir)]


project_templates = [
    {
        "project-template": {
            "name": "ansible-collections-amazon-aws-each-target",
            "periodic": {
                # we actually depend on ansible-test-splitter, but
                # it's listed in ansible-test-cloud-integration-aws
                #  dependency list
                "jobs": ["ansible-test-splitter"]
                + [job["job"]["name"] for job in jobs]
            },
        }
    }
]


class PushRootLeft:
    def __call__(self, s):
        result = []
        for line in s.splitlines(True):
            if line.startswith("---"):
                result.append("# Generated by tools/refresh-aws-periodical-jobs.py\n")
                result.append(line)
            else:
                # lines start with 2 empty spaces because of the offset=2
                result.append(line[2:])
        return "".join(result)


zuul_config_file = Path("zuul.d/amazon-aws-periodical-jobs.yaml")
yaml.dump(jobs + project_templates, zuul_config_file, transform=PushRootLeft())
