---
- hosts: controller
  tasks:
    - name: Add python38 support if needed
      block:
        - name: Ensure python3.8 is present
          become: true
          package:
            name: python3.8-dev
            state: present
      when:
        - ansible_os_family == "Debian"
        - ansible_test_python is version('3.8', '==')

    - name: Select proper ansible_network_os
      set_fact:
        _network_os: "{{ hostvars[groups['appliance'][0]]['ansible_network_os'] }}"
      when: '"appliance" in groups'

    - name: Select proper ansible_network_os
      set_fact:
        _network_os: "{{ hostvars[groups['openvswitch'][0]]['ansible_network_os'] }}"
      when: '"openvswitch" in groups'

    - name: Setup tox role
      include_role:
        name: tox
      vars:
        tox_extra_args: "-vv -- ansible-playbook -v playbooks/ansible-test-network-integration-base/files/bootstrap-{{ _network_os }}.yaml"
        tox_install_siblings: false
        zuul_work_dir: "{{ zuul.projects['github.com/ansible/ansible-zuul-jobs'].src_dir }}"

    - name: Ensure remote NETCONF SSH host keys are known
      shell: "ssh-keyscan -t rsa -p 830 {{ hostvars[item].ansible_host }} >> ~/.ssh/known_hosts"
      when: hostvars[item].ansible_network_os in ['junos']
      with_inventory_hostnames: appliance

    - name: Create inventory file
      template:
        src: "inventory-{{ _network_os }}.j2"
        dest: ~/inventory
        mode: 0644

    - name: Setup base virtualenv_options
      set_fact:
        _virtualenv_options: "--python python{{ ansible_test_python }}"

    - name: Enable --system-site-packages for virtualenv_options
      set_fact:
        _virtualenv_options: "{{ _virtualenv_options }} --system-site-packages"
      when: ansible_os_family == "RedHat"

    - name: Create virtualenv for ansible-test
      shell: "virtualenv {{ _virtualenv_options }} ~/venv"

    - name: Install ara into virtuelenv
      shell: ~/venv/bin/pip install "ara<1.0.0"

    - name: Install ansible into virtuelenv
      shell: "~/venv/bin/pip install {{ ansible_user_dir }}/{{ zuul.projects['github.com/ansible/ansible'].src_dir }}"

    - name: Enable persistent connection logging
      ini_file:
        path: "{{ ansible_user_dir }}/{{ zuul.projects['github.com/ansible/ansible'].src_dir }}/test/integration/network-integration.cfg"
        section: persistent_connection
        option: log_messages
        value: true

    - name: Set ansible log path
      ini_file:
        path: "{{ ansible_user_dir }}/{{ zuul.projects['github.com/ansible/ansible'].src_dir }}/test/integration/network-integration.cfg"
        section: defaults
        option: log_path
        value: ~/ansible-debug.txt
